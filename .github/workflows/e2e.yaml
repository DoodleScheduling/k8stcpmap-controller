name: e2e

on:
  pull_request:
  push:
    branches:
      - master
      - rework

jobs:
  kind:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all
      - name: Restore Go cache
        uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Cache Docker layers
        uses: actions/cache@v2
        id: cache
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-ghcache-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-ghcache-
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16.x
      - name: Setup Kubernetes
        uses: engineerd/setup-kind@v0.5.0
        with:
          version: v0.11.1
          image: kindest/node:v1.21.1@sha256:69860bda5563ac81e3c0057d654b5253219618a22ec3a346306239bba8cfa1a6
      - name: Setup Kustomize
        uses: fluxcd/pkg/actions/kustomize@main
      - name: Setup envtest
        uses: fluxcd/pkg/actions/envtest@main
        with:
          version: "1.19.2"
      - name: Setup Helm
        uses: fluxcd/pkg/actions/helm@main
      - name: Run controller tests
        run: make test
      - name: Check if working tree is dirty
        run: |
          if [[ $(git diff --stat) != '' ]]; then
            git --no-pager diff
            echo 'run make test and commit changes'
            exit 1
          fi
      - name: Build container image
        run: |
          make docker-build IMG=test/k8stcpmap-controller:latest BUILD_PLATFORMS=linux/amd64 \
            BUILD_ARGS="--cache-from=type=local,src=/tmp/.buildx-cache \
            --cache-to=type=local,dest=/tmp/.buildx-cache-new,mode=max"
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
      - name: Load test image
        run: kind load docker-image test/k8stcpmap-controller:latest
      - name: Deploy controller
        run: make deploy IMG=test/k8stcpmap-controller:latest
      - name: Setup nginx ingress
        env:
          NGINX_INGRESS_VER: ${{ '4.0.13' }}
        run: |
          kubectl create ns ingress-nginx
          kubectl -n ingress-nginx create cm tcp-services-configmap
          helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
          helm upgrade --wait -i ingress-nginx ingress-nginx/ingress-nginx \
          --version $NGINX_INGRESS_VER \
          --namespace ingress-nginx \
          --set controller.extraArgs.tcp-services-configmap="\$(POD_NAMESPACE)/tcp-services-configmap" \
          --set controller.service.type=ClusterIP
      - name: Setup podinfo
        env:
          PODINFO_VER: ${{ '6.0.3' }}
        run: |
          kubectl create ns podinfo
          helm repo add podinfo https://stefanprodan.github.io/podinfo
          helm upgrade --install --wait backend podinfo/podinfo \
          --version $PODINFO_VER \
          --namespace podinfo \
          --set replicaCount=2
      - name: Run tcpmap tests
        run: |
          kubectl -n podinfo apply -f ./config/testdata
          kubectl -n podinfo wait tcpingressmappings/backend-podinfo --for=condition=Ready --timeout=1m
          electedPort=$(kubectl -n podinfo get tcpingressmappings/backend-podinfo -o jsonpath='{.status.electedPort}')
          echo "bound port $electedPort"
          kubectl -n ingress-nginx port-forward svc/ingress-nginx-controller 8080:$electedPort &>/dev/null &

          #We need to wait a bit til nginx reloaded the map
          sleep 10
          curl --haproxy-protocol -v --fail http://localhost:8080
      - name: Logs
        run: |
          kubectl -n k8stcpmap-system logs deploy/k8stcpmap-controller
      - name: Debug failure
        if: failure()
        run: |
          kubectl -n kube-system describe pods
          kubectl -n k8stcpmap-system describe pods
          kubectl -n podinfo get tcpingressmappings -oyaml
          kubectl -n k8stcpmap-system get all
          kubectl -n k8stcpmap-system logs deploy/k8stcpmap-controller
          kubectl -n podinfo get all
          kubectl -n ingress-nginx get all
          kubectl -n ingress-nginx get cm -o yaml
